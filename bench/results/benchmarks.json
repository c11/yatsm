{
    "algorithms.ccdc.CCDCesqueLine.time_ccdcesque1": {
        "code": "def time_ccdcesque1(self, setup):\n    \"\"\" Bench with 'defaults' defined in setup with most tests turned off\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    model = CCDCesque(**kwargs)\n    for col in range(setup['Y'].shape[-1]):\n        _Y, _X, _dates = setup['Y'][..., col], setup['X'], setup['dates']\n        mask = np.in1d(_Y[-1, :], [0, 1])\n        model.fit(_X[mask, :], _Y[:, mask], _dates[mask])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesqueLine.time_ccdcesque1", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:108", 
        "timeout": 360, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesqueLine.time_ccdcesque2": {
        "code": "def time_ccdcesque2(self, setup):\n    \"\"\" Bench with remove_noise turned on\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    kwargs.update({'remove_noise': True})\n    model = CCDCesque(**kwargs)\n    for col in range(setup['Y'].shape[-1]):\n        _Y, _X, _dates = setup['Y'][..., col], setup['X'], setup['dates']\n        mask = np.in1d(_Y[-1, :], [0, 1])\n        model.fit(_X[mask, :], _Y[:, mask], _dates[mask])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesqueLine.time_ccdcesque2", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:108", 
        "timeout": 360, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesqueLine.time_ccdcesque3": {
        "code": "def time_ccdcesque3(self, setup):\n    \"\"\" Bench with remove_noise, dynamic_rmse turned on\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    kwargs.update({'remove_noise': True,\n                   'dynamic_rmse': True})\n    model = CCDCesque(**kwargs)\n    for col in range(setup['Y'].shape[-1]):\n        _Y, _X, _dates = setup['Y'][..., col], setup['X'], setup['dates']\n        mask = np.in1d(_Y[-1, :], [0, 1])\n        model.fit(_X[mask, :], _Y[:, mask], _dates[mask])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesqueLine.time_ccdcesque3", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:108", 
        "timeout": 360, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesqueLine.time_ccdcesque4": {
        "code": "def time_ccdcesque4(self, setup):\n    \"\"\" Bench with remove_noise, dynamic_rmse, slope_test turned on\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    kwargs.update({'remove_noise': True,\n                   'dynamic_rmse': True,\n                   'slope_test': True})\n    model = CCDCesque(**kwargs)\n    for col in range(setup['Y'].shape[-1]):\n        _Y, _X, _dates = setup['Y'][..., col], setup['X'], setup['dates']\n        mask = np.in1d(_Y[-1, :], [0, 1])\n        model.fit(_X[mask, :], _Y[:, mask], _dates[mask])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesqueLine.time_ccdcesque4", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:108", 
        "timeout": 360, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque1": {
        "code": "def time_ccdcesque1(self, setup):\n    \"\"\" Bench with 'defaults' defined in setup with most tests turned off\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    for i in range(n):\n        model = CCDCesque(**kwargs)\n        model.fit(setup['X'], setup['Y'], setup['dates'])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque1", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:35", 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque2": {
        "code": "def time_ccdcesque2(self, setup):\n    \"\"\" Bench with remove_noise turned on\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    kwargs.update({'remove_noise': True})\n    for i in range(n):\n        model = CCDCesque(**kwargs)\n        model.fit(setup['X'], setup['Y'], setup['dates'])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque2", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:35", 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque3": {
        "code": "def time_ccdcesque3(self, setup):\n    \"\"\" Bench with remove_noise, dynamic_rmse turned on\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    kwargs.update({'remove_noise': True,\n                   'dynamic_rmse': True})\n    for i in range(n):\n        model = CCDCesque(**kwargs)\n        model.fit(setup['X'], setup['Y'], setup['dates'])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque3", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:35", 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque4": {
        "code": "def time_ccdcesque4(self, setup):\n    \"\"\" Bench with remove_noise, dynamic_rmse, slope_test turned on\n    \"\"\"\n    kwargs = version_kwargs(setup['kwargs'])\n    kwargs.update({'remove_noise': True,\n                   'dynamic_rmse': True,\n                   'slope_test': True})\n    for i in range(n):\n        model = CCDCesque(**kwargs)\n        model.fit(setup['X'], setup['Y'], setup['dates'])\n", 
        "goal_time": 2.0, 
        "name": "algorithms.ccdc.CCDCesquePixel263.time_ccdcesque4", 
        "number": 0, 
        "param_names": [], 
        "params": [], 
        "repeat": 0, 
        "setup_cache_key": "/home/ceholden/Documents/yatsm/bench/benchmarks/algorithms/ccdc.py:35", 
        "timeout": 60.0, 
        "type": "time", 
        "unit": "seconds"
    }, 
    "version": 1
}
